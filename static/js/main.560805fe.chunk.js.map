{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selected","selectItem","item","setState","removeItem","filter","el","removeItems","getItems","length","join","this","className","type","onClick","map","good","classNames","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2QAMMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAe,CACbC,SAAU,I,EAGZC,WAAa,SAACC,GACZ,EAAKC,UAAS,SAACJ,GAAD,MAAY,CACxBC,SAAS,GAAD,mBAAMD,EAAMC,UAAZ,CAAsBE,S,EAIlCE,WAAa,SAACF,GACZ,EAAKC,UAAS,SAACJ,GAAD,MAAY,CACxBC,SAAUD,EAAMC,SAASK,QAAO,SAAAC,GAAE,OAAIA,IAAOJ,U,EAIjDK,YAAc,WACZ,EAAKJ,SAAS,CAAEH,SAAU,M,EAG5BQ,SAAW,WACT,IAAQR,EAAa,EAAKD,MAAlBC,SAER,OAAwB,IAApBA,EAASS,OACL,GAAN,OAAUT,EAASU,KAAK,MAAxB,gBAGI,GAAN,OAAUV,EAASU,KAAK,MAAxB,kB,4CAGF,WAAU,IAAD,OACCV,EAAaW,KAAKZ,MAAlBC,SAER,OACE,sBAAKY,UAAU,MAAf,UACE,qBAAIA,UAAU,QAAd,UACuB,IAApBZ,EAASS,OACNE,KAAKH,WACL,oBACH,IACoB,IAApBR,EAASS,QACR,wBACEI,KAAK,SACLD,UAAU,mBACVE,QAASH,KAAKJ,YAHhB,kBAUJ,8BACE,oBAAIK,UAAU,UAAd,SACGf,EAAgBkB,KAAI,SAAAC,GAAI,OACvB,6BACE,sBAAKJ,UAAU,QAAf,UACE,sBAAMA,UAAWK,IACf,CACE,0BAA2BjB,EAASkB,SAASF,KAFjD,SAMGA,IAEF,IACAhB,EAASkB,SAASF,GAEf,wBACEH,KAAK,SACLC,QAAS,WACP,EAAKV,WAAWY,IAHpB,oBAUA,wBACEH,KAAK,SACLC,QAAS,WACP,EAAKb,WAAWe,IAHpB,wBAvBCA,iB,GAvDLG,IAAMC,WAiGTtB,ICrHfuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.560805fe.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.min.css';\n\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selected: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selected: [],\n  };\n\n  selectItem = (item: string) => {\n    this.setState((state) => ({\n      selected: [...state.selected, item],\n    }));\n  };\n\n  removeItem = (item: string) => {\n    this.setState((state) => ({\n      selected: state.selected.filter(el => el !== item),\n    }));\n  };\n\n  removeItems = () => {\n    this.setState({ selected: [] });\n  };\n\n  getItems = () => {\n    const { selected } = this.state;\n\n    if (selected.length === 1) {\n      return `${selected.join(', ')} is selected`;\n    }\n\n    return `${selected.join(', ')} are selected`;\n  };\n\n  render() {\n    const { selected } = this.state;\n\n    return (\n      <div className=\"box\">\n        <h1 className=\"title\">\n          {selected.length !== 0\n            ? this.getItems()\n            : 'No goods selected'}\n          {' '}\n          {selected.length !== 0 && (\n            <button\n              type=\"button\"\n              className=\"button is-danger\"\n              onClick={this.removeItems}\n            >\n              X\n            </button>\n          )}\n        </h1>\n\n        <div>\n          <ul className=\"content\">\n            {goodsFromServer.map(good => (\n              <li key={good}>\n                <div className=\"block\">\n                  <span className={classNames(\n                    {\n                      'tag is-success is-light': selected.includes(good),\n                    },\n                  )}\n                  >\n                    {good}\n                  </span>\n                  {' '}\n                  {selected.includes(good)\n                    ? (\n                      <button\n                        type=\"button\"\n                        onClick={() => {\n                          this.removeItem(good);\n                        }}\n                      >\n                        Remove\n                      </button>\n                    )\n                    : (\n                      <button\n                        type=\"button\"\n                        onClick={() => {\n                          this.selectItem(good);\n                        }}\n                      >\n                        Select\n                      </button>\n                    )}\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}